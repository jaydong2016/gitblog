<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/jaydong2016/gitblog</id><title>RSS feed of jaydong2016's gitblog</title><updated>2023-07-03T15:52:00.924762+00:00</updated><author><name>jaydong2016</name><email>huangwudong2011@gmail.com</email></author><link href="https://github.com/jaydong2016/gitblog"/><link href="https://raw.githubusercontent.com/jaydong2016/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><entry><id>https://github.com/jaydong2016/gitblog/issues/17</id><title>何不食肉糜</title><updated>2023-07-03T15:52:01.288412+00:00</updated><content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/07/03/WxmifsloVXrYz2I.png" alt="android-chrome-512x512.png" />
在一个遥远的王国里，有一位名叫司马衷的国王。他是一个仁慈而又无知的统治者。有一年，这个王国发生了严重的饥荒，百姓们没有粮食吃，只能靠挖草根和食观音土来维持生命。</p>
<p>司马衷听说了这个消息后非常担忧。他问身边的大臣：“百姓们没有米饭充饥，何不食肉糜呢？”大臣们听后都不知所措。</p>
<p>这时，一个聪明的大臣站了出来。他对司马衷说：“陛下，百姓们连粮食都没有吃，哪里还有肉呢？我们应该想办法帮助他们度过难关。”</p>
<p>司马衷听后恍然大悟。他下令开仓放粮，并派人到各地救济灾民。最终，在国王和大臣们的努力下，百姓们度过了这次饥荒。</p>
<p>从那以后，“何不食肉糜”这句话就成为了人们提醒自己要关心百姓疾苦、用智慧解决问题的谚语。</p>
]]></content><link href="https://github.com/jaydong2016/gitblog/issues/17" rel="alternate"/><category term="转载摘录"/><published>2023-07-03T09:06:30+00:00</published></entry><entry><id>https://github.com/jaydong2016/gitblog/issues/16</id><title>Nginx 可视化管理界面</title><updated>2023-07-03T15:52:01.468867+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>今天给大家介绍一款 Nginx 可视化管理界面，非常好用，小白也能立马上手。</p>
</blockquote>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01597a5a-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<p>今天给大家介绍一款 Nginx 可视化管理界面，非常好用，小白也能立马上手。</p>
<p>nginx-proxy-manager 是一个反向代理管理系统，它基于 NGINX，具有漂亮干净的 Web UI。还可以获得受信任的 SSL 证书，并通过单独的配置、自定义和入侵保护来管理多个代理。它是开源的，斩获 11.8K 的 Star 数。</p>
<h2>特征</h2>
<ul>
<li>
<p>基于 Tabler(<a href="https://tabler.github.io/">https://tabler.github.io/</a>) 的美观安全的管理界面</p>
</li>
<li>
<p>无需了解 Nginx 即可轻松创建转发域、重定向、流和 404 主机</p>
</li>
<li>
<p>使用 Let's Encrypt 的免费 SSL 或提供您自己的自定义 SSL 证书</p>
</li>
<li>
<p>主机的访问列表和基本 HTTP 身份验证</p>
</li>
<li>
<p>高级 Nginx 配置可供超级用户使用</p>
</li>
<li>
<p>用户管理、权限和审核日志</p>
</li>
</ul>
<h2>安装</h2>
<h3>1、安装 Docker 和 Docker-Compose</h3>
<h3>2、创建一个 docker-compose.yml 文件</h3>
<pre><code>version: &#x27;3&#x27;
services:
  app:
    image: &#x27;jc21/nginx-proxy-manager:latest&#x27;
    restart: unless-stopped
    ports:
      - &#x27;80:80&#x27;
      - &#x27;81:81&#x27;
      - &#x27;443:443&#x27;
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt


</code></pre>
<h3>3、运行</h3>
<pre><code>docker-compose up -d

#如果使用的是 docker-compose-plugin
docker compose up -d

</code></pre>
<h3>4、访问网页</h3>
<p>运行成功后，访问 <a href="http://127.0.0.1:81/">http://127.0.0.1:81/</a> 就能看到界面啦</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01674f18-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<h3>5、登录</h3>
<p>网站默认账号和密码为</p>
<pre><code>账号：admin@example.com
密码：changeme


</code></pre>
<p>登录成功后第一次要求修改密码，按照步骤修改即可！</p>
<h3>6、登录成功主界面</h3>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01835f46-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<h2>实战：设置后台管理界面的反向代理</h2>
<p>这里，我们就用 <a href="http://a.test.com/">http://a.test.com/</a> 来绑定我们的端口号为 81 的后台管理界面，实现浏览器输入 <a href="http://a.test.com/">http://a.test.com/</a> 即可访问后台管理界面，并且设置 HTTPS。</p>
<h3>1、前提</h3>
<ul>
<li>
<p>安装好 Nginx Proxy Manager</p>
</li>
<li>
<p>拥有一个域名</p>
</li>
<li>
<p>将 <a href="http://a.test.com/">http://a.test.com/</a> 解析到安装 Nginx Proxy Manager 的服务器 ip 地址上</p>
</li>
</ul>
<h3>2、反向代理操作</h3>
<p>先用<code>ip:81</code><br />
访问后台管理界面，然后输入账号密码进入后台。</p>
<p>点击绿色图标的选项</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_0176ed88-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<p>点击右边<code>Add Proxy Host</code><br />
，在弹出的界面<code>Details</code><br />
选项中填写相应的字段。</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01918620-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<ul>
<li>
<p><strong>Domain Names</strong>: 填写要反向代理的域名，这里就是 <a href="http://a.test.com/">http://a.test.com/</a></p>
</li>
<li>
<p><strong>Forward Hostname / IP</strong>: 填写的 ip 值见下文解释</p>
</li>
<li>
<p><strong>Forward Port</strong>: 反向代理的端口，这里就是 81</p>
</li>
<li>
<p><strong>Block Common Exploits</strong>: 开启后阻止一些常见漏洞</p>
</li>
<li>
<p>其余两个暂不知作用</p>
</li>
</ul>
<p><strong>Forward Hostname / IP 填写说明</strong></p>
<p>如果搭建的服务和 nginx proxy manager 服务所在不是一个服务器，则填写能访问对应服务的 IP。如果都在同一台服务器上，则填写在服务器中输入<code>ip addr show docker0</code><br />
命令获取得到的 ip。</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01a1ce36-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<p>这里不填<code>127.0.0.1</code><br />
的原因是使用的是 docker 容器搭建 web 应用，docker 容器和宿主机即服务器不在同一个网络下，所以<code>127.0.0.1</code><br />
并不能访问到宿主机，而<code>ip addr show docker0</code><br />
获得的 ip 地址就是宿主机地址。</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01b10bf8-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<p>接下来即可用<code>a.test.com</code><br />
访问后台管理界面，此时还只是 http 协议，没有 https。不过此时就可以把之前的 81 端口关闭了，输入<code>a.test.com</code><br />
访问的是服务器<code>80</code><br />
端口，然后在转发给内部的 81 端口。</p>
<h3>3、申请 ssl 证书</h3>
<p>申请一个<code>a.test.com</code><br />
证书，这样就可以提供 https 访问了。</p>
<p>在 Nginx Proxy Manager 管理后台，选择<code>Access Lists</code><br />
-&gt;<code>Add SSL Certificate</code><br />
-&gt;<code>Let&#x27;s Encrypt</code><br />
选项。</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01bfc6fc-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<p>按照下图方式填写，点击 Save 就可以了</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01ccf318-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<h3>4、设置 HTTPS</h3>
<p>进入反向代理设置界面，编辑上文创建的反代服务，选择 SSL 选项，下拉菜单中选择我们申请的证书，然后可以勾选<code>Force SSL</code><br />
即强制 HTTPS。</p>
<p><img src="http://pic9.adone.eu.org/modb_20230329_01dc94a8-cdd7-11ed-a521-38f9d3cd240d.png" alt="" /></p>
<h2>总结</h2>
<p>以上就是本教程的全部内容，更多的使用教程，大家可以访问官方文档。</p>
<blockquote>
<p>官方文档：<a href="https://nginxproxymanager.com/guide/">https://nginxproxymanager.com/guide/</a></p>
</blockquote>
]]></content><link href="https://github.com/jaydong2016/gitblog/issues/16" rel="alternate"/><category term="转载摘录"/><published>2023-07-03T08:52:04+00:00</published></entry><entry><id>https://github.com/jaydong2016/gitblog/issues/15</id><title>&gt; 寻找蝈师</title><updated>2023-07-03T15:52:01.664083+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>寻找蝈师</p>
</blockquote>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0a996c5-0978-4c7d-97a3-35f86582ae19%2FIMG_20230501_113331.jpg?table=block&amp;id=f4016453-4cf9-4db7-bd01-c66efc2c27e4" alt="" /><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb0b717cc-741a-4228-b238-64f658006398%2FIMG_20230501_123857.jpg?table=block&amp;id=ec482973-b950-48de-8bcc-bb173cdf3eac" alt="" /><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2cb1960d-3a82-4b1c-8ac2-3262a9cf2913%2FMVIMG_20230620_191903.jpg?table=block&amp;id=9d2cbeb0-ba72-4ac5-9cbc-16785666a63c" alt="" />  💡蝈师在不在</p>
<p>微信扫码分享</p>
<ul>
<li><strong>作者:</strong><a href="/about">adone</a></li>
<li><strong>链接:</strong><a href="https://nb.adone.eu.org/article/example-3">https://nb.adone.eu.org/article/example-3</a></li>
<li><strong>声明:</strong> 本文采用 CC BY-NC-SA 4.0 许可协议，转载请注明出处。</li>
</ul>
]]></content><link href="https://github.com/jaydong2016/gitblog/issues/15" rel="alternate"/><category term="心情随想"/><published>2023-07-03T08:41:14+00:00</published></entry><entry><id>https://github.com/jaydong2016/gitblog/issues/14</id><title>【转载】申请CloudFlare免费15年的SSL证书</title><updated>2023-07-03T15:52:01.861700+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>原文地址 vpsyx.com</p>
</blockquote>
<blockquote>
<p>前言 现在大家用的最多的免费证书，可能就是 Let,s encrytp 了吧，但是它有一个缺点，就是有效期太短了，最多只有 90 天，每次都要想着证书是不是快要到期了，是不 不是该查看一下了，这样就有个牵挂了，......</p>
</blockquote>
<h2><strong>前言</strong></h2>
<p>现在大家用的最多的免费证书，可能就是 Let,s encrytp 了吧，但是它有一个缺点，就是有效期太短了，最多只有 90 天，每次都要想着证书是不是快要到期了，是不</p>
<p>不是该查看一下了，这样就有个牵挂了，要做到一个短期没牵挂的方法，那就是来个长期有效的证书</p>
<p>那么就有了这个选择——15 年有效期的免费证书</p>
<p><img src="https://s2.loli.net/2023/06/30/pGN6VlH5jPsDXWc.png" alt="https://s2.loli.net/2023/06/30/pGN6VlH5jPsDXWc.png" /></p>
<p>这个[<a href="https://vpsyx.com/domain/">域名</a>](https://vpsyx.com/domain/)我已经申请到了，到期日期——2037 年 7 月 23 日</p>
<p>注意</p>
<h3><strong>缺点一</strong></h3>
<p>这个证书也有一个致命缺点，就是只能配合它家的 CDN，小云朵使用，即要打开代理状态</p>
<p><img src="https://s2.loli.net/2023/06/30/lzNSRO4jKanLgwf.png" alt="https://s2.loli.net/2023/06/30/lzNSRO4jKanLgwf.png" /></p>
<p>不然就是还是否会提示 “Win 没有足够信息，不能验证该证书”</p>
<p><img src="https://s2.loli.net/2023/06/30/l8nmM2PLDhHOI6A.png" alt="https://s2.loli.net/2023/06/30/l8nmM2PLDhHOI6A.png" /></p>
<p>这就是关了小云朵后的提示</p>
<h3><strong>缺点二</strong></h3>
<p>即使申请的证书是 15 年，也是内部有效时间，对外，即客户层面看到的证书，还是 cloudflare 帮我们自动申请的，Let,s encrypt 的 E1 证书</p>
<p><img src="https://s2.loli.net/2023/06/30/mrhFRg3ekHNIa14.png" alt="https://s2.loli.net/2023/06/30/mrhFRg3ekHNIa14.png" /></p>
<p>不过这个不用我们自己再申请了，还是会一劳永逸的方法</p>
<p>如果能接受上面的两缺点，那我们才开始操作吧，如果接受不了，就放弃吧</p>
<h2><strong>申请过程</strong></h2>
<p>第一步：登录 cloudflare——SSL/TLS—— 概述——完全（严格）</p>
<p><img src="https://s2.loli.net/2023/06/30/7J19Z8jgpnqbVUS.png" alt="https://s2.loli.net/2023/06/30/7J19Z8jgpnqbVUS.png" /></p>
<p>第二步：SSL/TLS——源服务器——创建证书</p>
<p><img src="https://s2.loli.net/2023/06/30/k2XwxmPhEIWU9Bz.png" alt="https://s2.loli.net/2023/06/30/k2XwxmPhEIWU9Bz.png" /></p>
<p>第三步：选择使用 cloudflare 生成私钥和 CSR，类型默认 RAS（2048）就可以了，创建</p>
<p><img src="https://s2.loli.net/2023/06/30/dsqeDxtA5FOU2y7.png" alt="https://s2.loli.net/2023/06/30/dsqeDxtA5FOU2y7.png" /></p>
<p>第四步：复制 pem 和 key，自行保存，这里的 key 只出现一次，<strong>切记复制保存，切记复制保存，切记复制保存（重要）</strong></p>
<p><img src="https://s2.loli.net/2023/06/30/oiP1uSJzLC8a4Xs.png" alt="https://s2.loli.net/2023/06/30/oiP1uSJzLC8a4Xs.png" /></p>
<p>第五步：解析域名并开启代理小云朵，大功告成</p>
<h2><strong>总结</strong></h2>
<p>优点是 15 年，不需要自己为证书牵挂，缺点就是要依赖小云朵的 CDN，要保持一一对应关系</p>
<p>我们个人申请的 Let's encrypt 是 R3 级别的，cloudflare 帮我们申请的是 E1 级别的，有什么区别也不是很清楚，只知道是不一样的</p>
<p>区别如官方图示</p>
<p><img src="https://s2.loli.net/2023/06/30/mT7CdHbS5pElxar.png" alt="https://s2.loli.net/2023/06/30/mT7CdHbS5pElxar.png" /></p>
]]></content><link href="https://github.com/jaydong2016/gitblog/issues/14" rel="alternate"/><category term="转载摘录"/><published>2023-07-03T08:28:42+00:00</published></entry><entry><id>https://github.com/jaydong2016/gitblog/issues/13</id><title>【教程】1.1.1.1 Warp+ 24PB 几乎无限流量科学上网</title><updated>2023-07-03T15:52:02.037051+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>1.1.1.1 Warp+ 24PB 无限流量密钥 一个自动获取 1.1.1.1 warp+ 24PB 无限流量…</p>
</blockquote>
<h3>1.1.1.1 Warp+ 24PB 无限流量密钥</h3>
<p>一个自动获取 1.1.1.1 warp+ 24PB 无限流量密钥的 Telegram 机器人，1.1.1.1 免费用户只有 1GB 流量，而这个 Telegram 机器人 24 小时可以获取一个 1.1.1.1 warp+ unlimited license key 拥有 24PB + 流量，讲人话就是这些流量可用来出海，科学的上网，非常不错。</p>
<p><a href="https://www.ahhhhfs.com/wp-content/uploads/2023/04/%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%961.1.1.1-warp-24PB-%E6%97%A0%E9%99%90%E6%B5%81%E9%87%8F%E5%AF%86%E9%92%A5-%E5%87%BA%E6%B5%B7%E6%97%A0%E5%BF%A7-ip.jpg"><img src="https://s2.loli.net/2023/06/26/MQbKxcuJaGVyjH3.jpg" alt="" /></a></p>
<h3>1.1.1.1 Warp + 是什么</h3>
<p>Warp+ 是 Cloudflare 公司提供的一项增值服务，可以为用户提供更快速、更加安全的互联网访问体验。Warp+ 使用了一种名为 WireGuard 的 VPN 协议，以加密和隧道技术来保护用户的网络流量。如果购买了 Warp+ 服务，那么可以使用 Warp+ VPN 客户端来连接到 Cloudflare 的 VPN 服务器，并将你的所有网络流量通过该服务器进行加密和隧道传输。</p>
<h3>1.1.1.1 Warp+ 24PB 无限流量密钥使用步骤</h3>
<p>1、首先需要到官网安装 1.1.1.1APP 客户端：<a href="https://1.1.1.1/">https://1.1.1.1/</a></p>
<p>2、然后打开 Telegram 机器人，按要求输入命令进行获取 warp+ unlimited license key</p>
<p>Wrap+ Bot：<a href="https://t.me/generatewarpplusbot">https://t.me/generatewarpplusbot</a></p>
<p><a href="https://www.ahhhhfs.com/wp-content/uploads/2023/04/%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%961.1.1.1-warp-24PB-%E6%97%A0%E9%99%90%E6%B5%81%E9%87%8F%E5%AF%86%E9%92%A5-%E5%87%BA%E6%B5%B7%E6%97%A0%E5%BF%A7.jpg"><img src="https://s2.loli.net/2023/06/26/nvpELiCN29zXeHW.jpg" alt="" /></a></p>
<p>3、然后复制密钥，打开 1.1.1.1APP（iOS 端截图），找到账号 key 的地方进行更改即可</p>
<p><a href="https://www.ahhhhfs.com/wp-content/uploads/2023/04/%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%961.1.1.1-warp-24PB-%E6%97%A0%E9%99%90%E6%B5%81%E9%87%8F%E5%AF%86%E9%92%A5-%E5%87%BA%E6%B5%B7%E6%97%A0%E5%BF%A7-%E6%9B%B4%E6%94%B9%E5%AF%86%E9%92%A5.jpg"><img src="https://s2.loli.net/2023/06/26/FIU9c8MR2KgrC3s.jpg" alt="" /></a></p>
<p>低调用，且用且珍惜</p>
<h3>1.1.1.1 Warp+ 24PB 无限流量密钥获取地址</h3>
<p>Wrap+ Bot：<a href="https://t.me/generatewarpplusbot">https://t.me/generatewarpplusbot</a></p>
<p>原文链接：<a href="https://www.ahhhhfs.com/40632/" title="自动获取1.1.1.1 Warp+ 24PB 无限流量密钥 出海无忧">https://www.ahhhhfs.com/40632/</a></p>
]]></content><link href="https://github.com/jaydong2016/gitblog/issues/13" rel="alternate"/><category term="置顶文章"/><published>2023-07-03T08:25:43+00:00</published></entry><entry><id>https://github.com/jaydong2016/gitblog/issues/12</id><title>【教程】通过 Cloudflare Workers 部署 V2ray 代理，实现科学上网</title><updated>2023-07-03T15:52:02.211915+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>这是一个名为 edgetunnel 的 github 项目，可以通过 Cloudflare Workers 部署一个 vless协议的 V2ray代理。</p>
</blockquote>
<blockquote>
<p>提醒各位，本项目仅限技术交流使用，请勿滥用，由此引起的账号封禁等风险后果自负。</p>
</blockquote>
<h2><a href="https://nb.adone.eu.org/article/edgetunnel#c155f78aac684b3a88ff573eca6e17fb" title="项目地址"></a>项目地址 <a href="https://github.com/zizifn/edgetunnel">https://github.com/zizifn/edgetunnel</a></h2>
<h2><a href="https://nb.adone.eu.org/article/edgetunnel#b0644d3c6280409a9900c22cede6ecae" title="部署教程"></a>部署教程</h2>
<h4><a href="https://nb.adone.eu.org/article/edgetunnel#f1a65ce9a8a54762a009d2fc1f12f17f" title="1、访问 https://dash.cloudflare.com/login 注册并登录账号，点击 Workers 和 Pages ，点击 创建应用程序 "></a>1、访问 <a href="https://dash.cloudflare.com/login">https://dash.cloudflare.com/login</a> 注册并登录账号，点击 Workers 和 Pages ，点击 创建应用程序</h4>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8294cb25-8590-4b97-a709-3c8a4e1b5f8e%2FSnipaste_2023-06-24_08-31-43.jpg?table=block&amp;id=8cc1a18e-f719-4311-86d5-ee6ed2ae607f" alt="notion image" /></p>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F66579ae9-0fd9-4c72-af23-8bc98f5c0e9a%2FSnipaste_2023-06-24_08-37-45.jpg?table=block&amp;id=ef559ac9-c1b2-45ed-89a8-765c46594824" alt="notion image" /></p>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdecce684-297a-441d-9e74-70fbf78e14fb%2FSnipaste_2023-06-24_08-38-57.jpg?table=block&amp;id=627e8c1f-cc61-4536-9824-d84b8b247aeb" alt="notion image" /></p>
<h4><a href="https://nb.adone.eu.org/article/edgetunnel#409d47943b6b4929a8eb90cb17de9d90" title="2、打开项目的.js文件 https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js 全选复制里面的代码"></a>2、打开项目的.js文件 <a href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js">https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js</a> 全选复制里面的代码</h4>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4b32f868-0773-4854-bc83-d434707376af%2FSnipaste_2023-06-24_08-45-01.jpg?table=block&amp;id=379a6c55-e0c7-4d1f-adf1-4a5d5a6616b4" alt="notion image" /></p>
<h4><a href="https://nb.adone.eu.org/article/edgetunnel#8a4b075ca35543c99601103000028aca" title="3、Ctrl+V 粘贴到 Workers 编辑器"></a>3、Ctrl+V 粘贴到 Workers 编辑器</h4>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa82cbab3-4876-4491-a895-50b30ccccf09%2FSnipaste_2023-06-24_09-04-11.jpg?table=block&amp;id=a28d8113-f0a8-4df5-bf41-e89ed0afd093" alt="notion image" /></p>
<h4><a href="https://nb.adone.eu.org/article/edgetunnel#41bd7ad765d64add84024debe7b7ba42" title="4、修改 UUID 和 proxyIP，UUID 可选择在线生成 https://1024tools.com/uuid 复制粘贴，这里提供一个IP let proxyIP = ‘103.200.112.108’; 同样复制粘贴，最后点击保存并部署 "></a>4、修改 UUID 和 proxyIP，UUID 可选择在线生成 <a href="https://1024tools.com/uuid">https://1024tools.com/uuid</a> 复制粘贴，这里提供一个IP <code>let proxyIP = ‘103.200.112.108’;</code> 同样复制粘贴，最后点击保存并部署</h4>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F37bfcf9e-e831-43eb-8a46-8f3217e1de0f%2FSnipaste_2023-06-24_09-17-31.jpg?table=block&amp;id=387a9f37-9429-457c-9082-f6ba0fb94019" alt="notion image" /></p>
<h4><a href="https://nb.adone.eu.org/article/edgetunnel#e4028ee15f454c27b7d409353839beb4" title="5、添加自定义域名，访问（你绑定的自定义域名+/你的UUID)生成 V2ray 配置链接 "></a>5、添加自定义域名，访问（你绑定的自定义域名+/你的UUID)生成 V2ray 配置链接</h4>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3703464-be38-4866-a3bb-3e8a39d01809%2FSnipaste_2023-06-24_10-38-04.jpg?table=block&amp;id=293c59d2-b213-4252-b43b-5ee8222e7a2f" alt="notion image" /></p>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7397ce87-408c-4873-9d30-f4580fb590f7%2FSnipaste_2023-06-24_10-13-22.jpg?table=block&amp;id=7f9576a8-3edf-40ad-a8e7-22eeaef8aaab" alt="notion image" /></p>
<h4><a href="https://nb.adone.eu.org/article/edgetunnel#a3d02631230e4b88b8b55935b0c49526" title="6、将上面复制的V2ray 配置链接粘贴到 V2rayN 客户端，地址填入优选IP ，即可成功科学上网。优选IP 可通过 https://stock.hostmonit.com/CloudFlareYes 获取，或者加入TG群 https://t.me/CF_NAT"></a>6、将复制的V2ray 配置链接粘贴到 V2rayN 客户端，地址填入优选IP ，即可成功科学上网。优选IP 可通过 <a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a> 获取，或者加入TG群 <a href="https://t.me/CF_NAT">https://t.me/CF_NAT</a></h4>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F18f62739-dcdd-43cb-bda9-453268d4e545%2FSnipaste_2023-06-24_10-18-20.jpg?table=block&amp;id=467d65a7-6b44-467c-adaf-c8c806d00efc" alt="notion image" /></p>
<h2><a href="https://nb.adone.eu.org/article/edgetunnel#bda17cbaae714e948237ce7f5a9f794e" title="提醒各位"></a>提醒各位</h2>
<p>本项目仅限技术交流使用，请勿滥用，由此引起的账号封禁等风险自负。</p>
<hr />
<p>有些小伙伴可能没有域名，其实不用自定义域名也是可以的，客户端里去掉tls加密，端口改为80或者2052即可。</p>
<p>教程第4步完成部署之后，可以</p>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F18f09042-4d1c-44bf-8b3b-bd878bc3aebc%2FSnipaste_2023-06-24_13-56-24.jpg?table=block&amp;id=16ad3522-f8c7-4a19-a4b2-231a9f159610" alt="notion image" /></p>
<p>配置示例：</p>
<p><img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3936ca22-5b6b-48b1-a6e2-b5085c55225c%2FSnipaste_2023-06-24_13-50-41.jpg?table=block&amp;id=b77b0f3d-3940-41cc-8e04-35fd9acebc16" alt="notion image" /></p>
<pre><code>vless://d342d11e-d424-4583-b36e-524ab1f0afa4@icook.hk:80?encryption=none&amp;security=none&amp;sni=hello-world-tight-shadow-6768.idong-5c5.workers.dev&amp;fp=randomized&amp;type=ws&amp;host=hello-world-tight-shadow-6768.idong-5c5.workers.dev&amp;path=%2F%3Fed%3D2048#hello-world-tight-shadow-6768.idong-5c5.workers.dev
</code></pre>
]]></content><link href="https://github.com/jaydong2016/gitblog/issues/12" rel="alternate"/><category term="置顶文章"/><published>2023-07-03T08:18:41+00:00</published></entry></feed>